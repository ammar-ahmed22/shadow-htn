import type { Plan, ChatMessage, Ticket } from "./types"

export const mockTickets: Ticket[] = [
  {
    id: "T-001",
    title: "Set up authentication system",
    stage: "Discovery",
    status: "done",
    assignee: "Shadow",
    repo: "acme/web-app",
    branch: "feat/auth-setup",
    prUrl: "https://github.com/acme/web-app/pull/123",
    progress: {
      testsPassed: 12,
      testsTotal: 12,
      typeErrors: 0,
    },
    deps: [],
    updatedAt: "2 hours ago",
    description: "Implement OAuth 2.0 authentication with GitHub integration",
    activity: [
      {
        id: "act-1",
        type: "plan_created",
        message: "Authentication plan created",
        timestamp: "2024-01-15T10:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-2",
        type: "run_started",
        message: "Started OAuth implementation",
        timestamp: "2024-01-15T11:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-3",
        type: "pr_opened",
        message: "Opened PR #123",
        timestamp: "2024-01-15T14:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-4",
        type: "checks_passed",
        message: "All checks passed",
        timestamp: "2024-01-15T14:30:00Z",
      },
      {
        id: "act-5",
        type: "approved",
        message: "PR approved by @john",
        timestamp: "2024-01-15T15:00:00Z",
        user: "john",
      },
    ],
  },
  {
    id: "T-002",
    title: "Implement user dashboard",
    stage: "Development",
    status: "in_progress",
    assignee: "Shadow",
    repo: "acme/web-app",
    branch: "feat/dashboard",
    progress: {
      testsPassed: 8,
      testsTotal: 15,
      typeErrors: 2,
    },
    deps: ["T-001"],
    updatedAt: "30 minutes ago",
    description: "Create responsive user dashboard with analytics widgets",
    activity: [
      {
        id: "act-6",
        type: "plan_created",
        message: "Dashboard wireframes completed",
        timestamp: "2024-01-16T09:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-7",
        type: "run_started",
        message: "Started dashboard implementation",
        timestamp: "2024-01-16T10:00:00Z",
        user: "Shadow",
      },
    ],
  },
  {
    id: "T-003",
    title: "Add payment integration",
    stage: "Testing",
    status: "review",
    assignee: "Shadow",
    repo: "acme/web-app",
    branch: "feat/payments",
    prUrl: "https://github.com/acme/web-app/pull/124",
    progress: {
      testsPassed: 20,
      testsTotal: 22,
      typeErrors: 1,
    },
    deps: ["T-002"],
    updatedAt: "1 hour ago",
    description: "Integrate Stripe payment processing with subscription management",
    activity: [
      {
        id: "act-8",
        type: "plan_created",
        message: "Payment flow designed",
        timestamp: "2024-01-17T08:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-9",
        type: "run_started",
        message: "Stripe integration started",
        timestamp: "2024-01-17T09:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-10",
        type: "pr_opened",
        message: "Opened PR #124",
        timestamp: "2024-01-17T16:00:00Z",
        user: "Shadow",
      },
      {
        id: "act-11",
        type: "changes_requested",
        message: "Security review requested changes",
        timestamp: "2024-01-17T17:00:00Z",
        user: "security-team",
      },
    ],
  },
  {
    id: "T-004",
    title: "Deploy to production",
    stage: "Production",
    status: "todo",
    assignee: "Shadow",
    repo: "acme/web-app",
    deps: ["T-003"],
    updatedAt: "3 hours ago",
    description: "Deploy application to production environment with monitoring",
    activity: [],
  },
]

export const suggestedPrompts = [
  "Convert codebase JS → TS",
  "Migrate WordPress → Next.js + Supabase",
  "Upgrade Next 12→14 and fix breaking changes",
]

export const mockChatHistory: ChatMessage[] = [
  {
    id: "msg-1",
    type: "user",
    content: "Convert my JavaScript codebase to TypeScript",
    timestamp: new Date(Date.now() - 300000).toISOString(),
  },
  {
    id: "msg-2",
    type: "assistant",
    content:
      "I'll help you convert your JavaScript codebase to TypeScript. Let me analyze your project structure and create a migration plan.",
    plan: undefined,
    timestamp: new Date(Date.now() - 240000).toISOString(),
  },
]

export const mockPlan: Plan = {
  id: "plan-1",
  summary: "Shadow will migrate the repo from JS to TS in four gated stages.",
  stages: ["Discovery", "Development", "Testing", "Production"],
  tickets: [
    {
      id: "T-1023",
      title: "Add tsconfig, types, and CI check",
      stage: "Discovery",
      status: "todo" as const,
      assignee: "Shadow",
      repo: "acme/web-app",
      updatedAt: "1 hour ago",
      estimate: "0.5d",
      description: "Set up TypeScript configuration and type definitions",
      deps: [],
    },
    {
      id: "T-1024",
      title: "Convert src/lib to TS (batch 1)",
      stage: "Development",
      status: "todo" as const,
      assignee: "Shadow",
      repo: "acme/web-app",
      updatedAt: "1 hour ago",
      estimate: "1d",
      description: "Convert library files to TypeScript",
      deps: ["T-1023"],
    },
    {
      id: "T-1025",
      title: "Fix remaining type errors",
      stage: "Testing",
      status: "todo" as const,
      assignee: "Shadow",
      repo: "acme/web-app",
      updatedAt: "1 hour ago",
      estimate: "0.5d",
      description: "Resolve TypeScript compilation errors",
      deps: ["T-1024"],
    },
    {
      id: "T-1026",
      title: "Open PR and run checks",
      stage: "Production",
      status: "todo" as const,
      assignee: "Shadow",
      repo: "acme/web-app",
      updatedAt: "1 hour ago",
      estimate: "0.25d",
      description: "Create pull request and validate all checks pass",
      deps: ["T-1025"],
    },
  ],
  createdAt: new Date().toISOString(),
}
